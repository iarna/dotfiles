#!/bin/bash
INSTALLTO=~/.etc
FINAL=~
if [ -z "$1" ]; then
	DRYRUN=true
elif [ "$1" == "now" ]; then
	DRYRUN=false
elif [[ "$1" =~ / ]]; then
	INSTALLTO="$@"
	DRYRUN=false
else
	echo "Form: $0 [now]" 1>&2
	echo "By default, install will print out a list of what it would do." 1>&2
	echo "If you pass \"now\" as an argument, it will copy the files from" 1>&2
	echo "this repository into your home directory." 1>&2
	exit 1
fi

function run-cmd () {
	if [ "$DRYRUN" == "true" ]; then
		echo "  > $@"
	else
		"$@"
	fi
}

function update-home () {
	FILE="$1"
	PREFIXGIT="$2"
	PREFIXFINAL="$3"
	if [ -d "$FILE" ]; then
		git ls-files "$FILE" | sort | grep -v "$ignorere" | while read toinst; do
			update-home "$toinst" "$PREFIXGIT" "$PREFIXFINAL"
		done
	else
		prefix_dir=$(dirname "${PREFIXGIT}${FILE}")
		final_dir=$(dirname "${PREFIXFINAL}${FILE}")
		if [ ! -d "$prefix_dir" ]; then
			run-cmd mkdir -v -p "$prefix_dir"
		fi
		if [ ! -d "$final_dir" ]; then
			run-cmd mkdir -v -p "$final_dir"
		fi
		if echo $FILE | grep -q '[.]patch$'; then
			FULLPATH="$(pwd)/${FILE}"
			pushd "${PREFIXGIT}" > /dev/null
			run-cmd git apply "${FULLPATH}"
			popd > /dev/null
		elif echo $FILE | grep -q '[.]replace$'; then
			FINALNAME="$(basename "${FILE}" .replace)"
			run-cmd cp -v -a "$FILE" "${PREFIXGIT}${FINALNAME}"
			run-cmd ln -f -s "${PREFIXGIT}${FINALNAME}" "${PREFIXFINAL}${FINALNAME}"
		else
			run-cmd cp -v -a "$FILE" "${PREFIXGIT}${FILE}"
			run-cmd ln -f -s "${PREFIXGIT}${FILE}" "${PREFIXFINAL}${FILE}"
		fi
	fi
}

function post-install () {
	if [ -d ssh ]; then
		run-cmd chmod go-rwx -R "$INSTALLTO/.ssh"
	fi
}

# We always ignore ourselves
extra_ignore_re="^install$"

# Plus we ignore any directories flagged as non-dot
for a in $(cat .non-dot-dirs); do
	extra_ignore_re="$extra_ignore_re\|"
	extra_ignore_re="$extra_ignore_re^$a/"
done

# Plus anything in .installignore, which we strip comments from
# and join with pipes
ignorere="$((grep -v '^#' .installignore; echo $extra_ignore_re) | perl -e 'print join q{\|}, grep {!/^$/} map {chomp;$_} <>')"

if [ -n $INSTALLTO ]; then
	run-cmd mkdir $INSTALLTO
	run-cmd git init $INSTALLTO
fi

pushd $INSTALLTO
run-cmd git stash
popd

# Then we tell it to install our contents as dotfiles
update-home . "$INSTALLTO/." "$FINAL/."

# Plus the contents of our non_dot_dirs
for non_dot_dir in $(cat .non-dot-dirs); do
	if [ -d $non_dot_dir ]; then
		pushd $non_dot_dir
		update-home . "$INSTALLTO/$non_dot_dir/" "$FINAL/$non_dot_dir/"
		popd
	fi
done

# Run our post install steps, mostly perm changes
post-install

pushd $INSTALLTO
run-cmd git add -A .
run-cmd git commit -m"New install $(date "+%Y-%m-%d %H:%M:%S %Z")"
run-cmd git stash pop
popd
